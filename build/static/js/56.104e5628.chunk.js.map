{"version":3,"file":"static/js/56.104e5628.chunk.js","mappings":"8OAMA,MAJA,WACE,OAAO,uCACT,E,UC6HA,GAzH4BA,EAAAA,KAAaC,MAAM,CAC7CC,UAAWF,EAAAA,KAAWG,SAAS,yBAC/BC,iBAAkBJ,EAAAA,KAAaG,SAAS,8BAGpB,WACpB,IAAQE,GAAsBC,EAAAA,EAAAA,YAAWC,EAAAA,IAAjCF,kBACFG,EAAe,yCAAG,yFAInB,OAHHH,EAAkB,CAChBI,KAAMC,EAAAA,GAAAA,UACNC,SAAS,IACR,kBAEkBC,EAAAA,GAAAA,IAAU,6CAA6C,KAAD,EAW/C,OAXpBC,EAAI,UAERR,EAAkB,CAChBI,KAAMC,EAAAA,GAAAA,eACNC,QAASE,EAAKA,KAAKA,OAErBR,EAAkB,CAChBI,KAAMC,EAAAA,GAAAA,UACNC,SAAS,KAGbG,QAAQC,IAAI,OAAQF,GAAM,kBACnBA,GAAI,kCAEXC,QAAQC,IAAI,UAAU,EAAD,IAAO,0DAE/B,kBAtBoB,mCAuBfC,EAAY,yCAAG,WAAOL,GAAO,4EACxB,yBAEYC,EAAAA,GAAAA,KACjB,4CACAD,GACA,KAAD,EAUD,OAbME,EAAI,SAMO,WAAH,OAASI,EAAAA,EAAAA,IAAM,yCAAgC,CAC3DC,GAEFJ,QAAQC,IAAI,OAAQF,GAIpB,kBACOA,GAAI,kCAEXC,QAAQC,IAAI,UAAU,EAAD,IAAO,0DAE/B,gBArBiB,sCAsBlB,OACE,iBAAKI,UAAU,iBAAgB,WAC7B,SAAC,KAAM,CACLC,cAAe,CACblB,UAAW,GACXE,iBAAkB,IAGpBe,UAAU,gBACVE,SAAU,SAACC,EAAO,GAAoB,IAAjBC,EAAS,EAATA,UACnBT,QAAQC,IAAIO,GACZN,EAAaM,GACbC,GAEF,EAAE,SAED,YAAU,EAAPC,QAA6C,IAApCC,EAAM,EAANA,OAAsBH,GAAF,EAAZI,aAAoB,EAANJ,QAEjC,OADAR,QAAQC,IAAI,QAASU,EAAQH,IAE3B,UAAC,KAAI,YACH,iBAAKH,UAAU,aAAY,WACzB,kBAAOQ,QAAQ,YAAYR,UAAU,OAAM,qCAG3C,SAAC,KAAK,CACJV,KAAK,OACLU,UAAU,eACVS,GAAG,YACHC,KAAK,YACLC,YAAY,6BAEd,SAAC,KAAY,CACXC,UAAU,MACVF,KAAK,YACLV,UAAU,cAGd,iBAAKA,UAAU,aAAY,WACzB,kBAAOQ,QAAQ,cAAcR,UAAU,OAAM,0CAG7C,SAAC,KAAK,CACJV,KAAK,SACLU,UAAU,eACVS,GAAG,mBACHC,KAAK,mBACLC,YAAY,wBAEd,SAAC,KAAY,CACXC,UAAU,MACVF,KAAK,mBACLV,UAAU,cAGd,gBAAKA,UAAU,aAAY,UACzB,mBAAQV,KAAK,SAASU,UAAU,uBAAsB,wBAM9D,KAGF,SAAC,EAAU,CAACX,gBAAiBA,MAGnC,E","sources":["components/modules/DriveData/DriveDrive.js","components/modules/VaccineStatus/VaccineStatus.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction DriveDrive() {\r\n  return <div>DriveDrive</div>;\r\n}\r\n\r\nexport default DriveDrive;\r\n","import React, { useContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport DriveDrive from \"../DriveData/DriveDrive\";\r\nimport { appActionTypes, AppStore } from \"../../../context/AppContext\";\r\n\r\nconst StudentDetailschema = Yup.object().shape({\r\n  driveDate: Yup.date().required(\"Student name required\"),\r\n  numberOfVaccines: Yup.number().required(\"Vaccine name is required\"),\r\n});\r\n\r\nconst VaccineStatus = () => {\r\n  const { appActionDispatch } = useContext(AppStore);\r\n  const getAllDriveData = async () => {\r\n    appActionDispatch({\r\n      type: appActionTypes.setLoader,\r\n      payload: true,\r\n    });\r\n    try {\r\n      const data = await axios.get(\"http://localhost:4000/api/v1/vaccineDrive\");\r\n      if (data) {\r\n        appActionDispatch({\r\n          type: appActionTypes.setStudentData,\r\n          payload: data.data.data,\r\n        });\r\n        appActionDispatch({\r\n          type: appActionTypes.setLoader,\r\n          payload: false,\r\n        });\r\n      }\r\n      console.log(\"#DD>\", data);\r\n      return data;\r\n    } catch (err) {\r\n      console.log(\"error: \", err);\r\n    }\r\n  };\r\n  const handleSubmit = async (payload) => {\r\n    debugger;\r\n    try {\r\n      const data = await axios.post(\r\n        \"http://localhost:4000/api/v1/vaccineDrive\",\r\n        payload\r\n      );\r\n      if (data) {\r\n        // getAllStudentsData();\r\n        const notify = () => toast(\"Drive Added Successfully ðŸ˜²!\");\r\n        notify();\r\n      }\r\n      console.log(\"#DD>\", data);\r\n      // setStudent({\r\n      //   studentName: \"\",\r\n      //   vaccineName: \"\",\r\n      // });\r\n      return data;\r\n    } catch (err) {\r\n      console.log(\"error: \", err);\r\n    }\r\n  };\r\n  return (\r\n    <div className='dashboard-main'>\r\n      <Formik\r\n        initialValues={{\r\n          driveDate: \"\",\r\n          numberOfVaccines: \"\",\r\n        }}\r\n        // validationSchema={StudentDetailschema}\r\n        className='student-form '\r\n        onSubmit={(values, { resetForm }) => {\r\n          console.log(values);\r\n          handleSubmit(values);\r\n          resetForm();\r\n          // alert(\"Form is validated! Submitting the form...\");\r\n        }}\r\n      >\r\n        {({ touched, errors, isSubmitting, values }) => {\r\n          console.log(\"#TTTT\", errors, values);\r\n          return (\r\n            <Form>\r\n              <div className='col-6 mb-4'>\r\n                <label htmlFor='driveDate' className='mb-2'>\r\n                  Vaccination Drive Date\r\n                </label>\r\n                <Field\r\n                  type='date'\r\n                  className='form-control'\r\n                  id='driveDate'\r\n                  name='driveDate'\r\n                  placeholder=' Vaccination Drive Date'\r\n                />\r\n                <ErrorMessage\r\n                  component='div'\r\n                  name='driveDate'\r\n                  className='error'\r\n                />\r\n              </div>\r\n              <div className='col-6 mb-4'>\r\n                <label htmlFor='vaccineName' className='mb-2'>\r\n                  Number of vaccine available\r\n                </label>\r\n                <Field\r\n                  type='number'\r\n                  className='form-control'\r\n                  id='numberOfVaccines'\r\n                  name='numberOfVaccines'\r\n                  placeholder='Number of Vaccines'\r\n                />\r\n                <ErrorMessage\r\n                  component='div'\r\n                  name='numberOfVaccines'\r\n                  className='error'\r\n                />\r\n              </div>\r\n              <div className='col-6 mb-3'>\r\n                <button type='submit' className='btn btn-primary mb-3'>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n\r\n      <DriveDrive getAllDriveData={getAllDriveData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VaccineStatus;\r\n"],"names":["Yup","shape","driveDate","required","numberOfVaccines","appActionDispatch","useContext","AppStore","getAllDriveData","type","appActionTypes","payload","axios","data","console","log","handleSubmit","toast","notify","className","initialValues","onSubmit","values","resetForm","touched","errors","isSubmitting","htmlFor","id","name","placeholder","component"],"sourceRoot":""}